name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version (e.g., 1.0.0)"
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Validate version
        id: version
        run: |
          VERSION="${{ inputs.version }}"
          VERSION="${VERSION#v}"

          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?$ ]]; then
            echo "Invalid version format. Use: X.Y.Z or X.Y.Z-suffix"
            exit 1
          fi

          TAG_NAME="v${VERSION}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        run: |
          if git rev-parse "${{ steps.version.outputs.tag_name }}" >/dev/null 2>&1; then
            echo "Tag ${{ steps.version.outputs.tag_name }} already exists"
            exit 1
          fi

      - name: Build Android
        id: build
        uses: ./.github/actions/build-android
        with:
          version_name: ${{ steps.version.outputs.version }}
          version_code: ${{ github.run_number }}
          build_type: release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: release-artifacts-${{ steps.version.outputs.version }}
          path: ${{ steps.build.outputs.apk_path }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ steps.version.outputs.tag_name }}
          git push origin ${{ steps.version.outputs.tag_name }}

          gh release create ${{ steps.version.outputs.tag_name }} \
            --title "Release ${{ steps.version.outputs.tag_name }}" \
            --notes "Release ${{ steps.version.outputs.tag_name }}" \
            ${{ steps.build.outputs.apk_path }}
